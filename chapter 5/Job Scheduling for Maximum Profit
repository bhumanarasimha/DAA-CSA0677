import bisect

def jobScheduling(startTime, endTime, profit):
    jobs = sorted(zip(startTime, endTime, profit), key=lambda x: x[1])
    dp = []
    for s, e, p in jobs:
        i = bisect.bisect_right(dp, s, key=lambda x: x[0])
        current_profit = p + (dp[i-1][1] if i > 0 else 0)
        if not dp or current_profit > dp[-1][1]:
            dp.append((e, current_profit))
        else:
            dp[bisect.bisect_right(dp, e, key=lambda x: x[0])-1] = (e, max(dp[bisect.bisect_right(dp, e, key=lambda x: x[0])-1][1], current_profit))
    return dp[-1][1]

# Test cases
print(jobScheduling([1, 2, 3, 3], [3, 4, 5, 6], [50, 10, 40, 70]))  # Output: 120
print(jobScheduling([1, 2, 3, 4, 6], [3, 5, 10, 6, 9], [20, 20, 100, 70, 60]))  # Output: 150
